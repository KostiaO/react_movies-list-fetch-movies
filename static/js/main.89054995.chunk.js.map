{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_KEY","getFilms","title","a","fetch","response","json","FindMovie","React","memo","addMovie","useState","query","setQuery","isInList","setIsInList","error","setError","film","setFilm","getFilmsByTitle","neededFilm","Response","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","Class","value","onChange","target","disabled","Boolean","onClick","App","setMovies","useCallback","some","movie1","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89054995.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_KEY = '6e81b2fe';\n\nexport async function getFilms(title: string) {\n  const response = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&t=${title}`);\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport Class from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getFilms } from '../../api/api';\n\ninterface Props {\n  addMovie: (movie: Movie) => boolean\n}\n\nexport const FindMovie: React.FC<Props> = React.memo(\n  ({ addMovie }) => {\n    const [query, setQuery] = useState<string>('');\n\n    const [isInList, setIsInList] = useState<boolean>(false);\n\n    const [error, setError] = useState<boolean>(false);\n\n    const [film, setFilm] = useState<Movie | null>(null);\n\n    const getFilmsByTitle = async (title: string) => {\n      const neededFilm = await getFilms(title);\n\n      if (neededFilm.Response === 'False') {\n        setError(true);\n        setQuery('');\n\n        return;\n      }\n\n      setFilm(neededFilm);\n    };\n\n    return (\n      <>\n        <form\n          className=\"find-movie\"\n          onSubmit={(event) => {\n            event.preventDefault();\n\n            getFilmsByTitle(query);\n            setQuery('');\n          }}\n        >\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={Class('input', { 'is-danger': error })}\n                value={query}\n                onChange={({ target }) => {\n                  setQuery(target.value);\n                  setError(false);\n                  setFilm(null);\n                  setIsInList(false);\n                }}\n              />\n            </div>\n\n            {error && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                type=\"submit\"\n                className=\"button is-light\"\n                disabled={Boolean(film) || !query}\n              >\n                Find a movie\n              </button>\n            </div>\n\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                disabled={!film}\n                onClick={() => {\n                  if (film) {\n                    if (!addMovie(film)) {\n                      setIsInList(true);\n                    }\n                  }\n\n                  setQuery('');\n                  setFilm(null);\n                }}\n              >\n                Add to the list\n              </button>\n              <br />\n              {isInList\n                && (<p className=\"help is-danger\">It is alredy in list</p>)}\n            </div>\n          </div>\n        </form>\n\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          {film && (\n            <MovieCard movie={film} />\n          )}\n        </div>\n      </>\n    );\n  },\n);\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App : React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie): boolean => {\n    if (!movies.some(movie1 => movie1.imdbID === movie.imdbID)) {\n      setMovies([...movies, movie]);\n\n      return true;\n    }\n\n    return false;\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}